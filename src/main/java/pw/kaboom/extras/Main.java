package pw.kaboom.extras;

import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.UUID;

import org.bukkit.WorldCreator;

import org.bukkit.entity.Player;

import org.bukkit.permissions.PermissionAttachment;

import org.bukkit.plugin.java.JavaPlugin;

import com.sk89q.worldedit.WorldEdit;

public class Main extends JavaPlugin {
	HashSet<String> consoleCommandBlacklist = new HashSet<String>(Arrays.asList(new String[] {
		"essentials:action",
		"essentials:afk",
		"essentials:amsg",
		"essentials:away",
		"essentials:ban",
		"essentials:banip",
		"essentials:bc",
		"essentials:bcast",
		"essentials:bcastw",
		"essentials:bcw",
		"essentials:broadcast",
		"essentials:ci",
		"essentials:clean",
		"essentials:clear",
		"essentials:clearinvent",
		"essentials:clearinventory",
		"essentials:describe",
		"essentials:eaction",
		"essentials:eafk",
		"essentials:eat",
		"essentials:eamsg",
		"essentials:eaway",
		"essentials:eban",
		"essentials:ebanip",
		"essentials:ebc",
		"essentials:ebcast",
		"essentials:ebcastw",
		"essentials:ebcw",
		"essentials:ebroadcast",
		"essentials:ebroadcastworld",
		"essentials:eci",
		"essentials:eco",
		"essentials:economy",
		"essentials:eclean",
		"essentials:eclear",
		"essentials:eclearinvent",
		"essentials:eclearinventory",
		"essentials:edescribe",
		"essentials:eeat",
		"essentials:eeco",
		"essentials:eeconomy",
		"essentials:eemail",
		"essentials:efeed",
		"essentials:eheal",
		"essentials:ehelpop",
		"essentials:ejail",
		"essentials:ekick",
		"essentials:ekill",
		"essentials:email",
		"essentials:eme",
		"essentials:ememo",
		"essentials:emute",
		"essentials:emsg",
		"essentials:enuke",
		"essentials:epardon",
		"essentials:epardonip",
		"essentials:epm",
		"essentials:eshoutworld",
		"essentials:esilence",
		"essentials:esudo",
		"essentials:etele",
		"essentials:eteleport",
		"essentials:etell",
		"essentials:etempban",
		"essentials:etjail",
		"essentials:etogglejail",
		"essentials:etp",
		"essentials:etp2p",
		"essentials:etpaall",
		"essentials:etppos",
		"essentials:etptoggle",
		"essentials:eunban",
		"essentials:eunbanip",
		"essentials:ev",
		"essentials:evanish",
		"essentials:ewarp",
		"essentials:ewarps",
		"essentials:ewhisper",
		"essentials:feed",
		"essentials:heal",
		"essentials:helpop",
		"essentials:jail",
		"essentials:kick",
		"essentials:kill",
		"essentials:m",
		"essentials:mail",
		"essentials:me",
		"essentials:memo",
		"essentials:mute",
		"essentials:msg",
		"essentials:nuke",
		"essentials:pardon",
		"essentials:pardonip",
		"essentials:pm",
		"essentials:shoutworld",
		"essentials:silence",
		"essentials:sudo",
		"essentials:t",
		"essentials:tele",
		"essentials:teleport",
		"essentials:tell",
		"essentials:tempban",
		"essentials:tjail",
		"essentials:togglejail",
		"essentials:tp",
		"essentials:tp2p",
		"essentials:tpaall",
		"essentials:tppos",
		"essentials:tptoggle",
		"essentials:unban",
		"essentials:unbanip",
		"essentials:v",
		"essentials:vanish",
		"essentials:w",
		"essentials:warp",
		"essentials:warps",
		"essentials:whisper",
		"extras:cc",
		"extras:clearchat",
		"minecraft:clear",
		"minecraft:effect",
		"minecraft:execute",
		"minecraft:gamemode",
		"minecraft:gamerule",
		"minecraft:kill",
		"minecraft:me",
		"minecraft:say",
		"minecraft:tell",
		"minecraft:tellraw",
		"minecraft:title",
		"minecraft:tp",
		"action",
		"afk",
		"amsg",
		"away",
		"ban",
		"banip",
		"bc",
		"bcast",
		"bcastw",
		"bcw",
		"broadcast",
		"cc",
		"ci",
		"clean",
		"clear",
		"clearchat",
		"clearinvent",
		"clearinventory",
		"describe",
		"eaction",
		"eafk",
		"eamsg",
		"eat",
		"eaway",
		"eban",
		"ebanip",
		"ebc",
		"ebcast",
		"ebcastw",
		"ebcw",
		"ebroadcastworld",
		"eci",
		"eclean",
		"eclear",
		"eclearinvent",
		"eclearinventory",
		"eco",
		"economy",
		"edescribe",
		"eeat",
		"eeco",
		"eeconomy",
		"eemail",
		"efeed",
		"effect",
		"eheal",
		"ehelpop",
		"ejail",
		"ekick",
		"ekill",
		"email",
		"eme",
		"ememo",
		"emute",
		"emsg",
		"enuke",
		"epardon",
		"epardonip",
		"epm",
		"eshoutworld",
		"esilence",
		"esudo",
		"etele",
		"eteleport",
		"etell",
		"etempban",
		"etjail",
		"etogglejail",
		"etp",
		"etp2p",
		"etpaall",
		"etppos",
		"etptoggle",
		"eunban",
		"eunbanip",
		"ev",
		"evanish",
		"ewarp",
		"ewarps",
		"ewhisper",
		"execute",
		"feed",
		"gamemode",
		"gamerule",
		"heal",
		"helpop",
		"jail",
		"kill",
		"m",
		"mail",
		"me",
		"memo",
		"mute",
		"msg",
		"nuke",
		"paper:paper",
		"paper",
		"pardon",
		"pardonip",
		"pm",
		"shoutworld",
		"say",
		"spigot:spigot",
		"spigot",
		"t",
		"tele",
		"teleport",
		"tell",
		"tempban",
		"tp",
		"tp2p",
		"tpaall",
		"tppos",
		"tptoggle",
		"unban",
		"unbanip",
		"v",
		"vanish",
		"w",
		"warp",
		"warps",
		"whisper",
	}));
	HashMap<UUID, Boolean> enteredPortal = new HashMap<UUID, Boolean>();
	HashMap<UUID, Boolean> enteredTitle = new HashMap<UUID, Boolean>();
	HashMap<UUID, PermissionAttachment> permissionList = new HashMap<UUID, PermissionAttachment>();

	public void onEnable() {
		getServer().createWorld(new WorldCreator("world_flatlands"));
		getServer().createWorld(new WorldCreator("world_overworld"));

		this.getCommand("end").setExecutor(new CommandEnd());
		this.getCommand("flatlands").setExecutor(new CommandFlatlands());
		this.getCommand("hub").setExecutor(new CommandHub());
		this.getCommand("nether").setExecutor(new CommandNether());
		this.getCommand("overworld").setExecutor(new CommandOverworld());
		this.getCommand("spawn").setExecutor(new CommandSpawn());
		this.getCommand("console").setExecutor(new CommandConsole());
		this.getCommand("vote").setExecutor(new CommandVote());
		this.getCommand("discord").setExecutor(new CommandDiscord());
		this.getCommand("clearchat").setExecutor(new CommandClearChat());
		this.getCommand("tellraw").setExecutor(new CommandTellraw());
		this.getCommand("prefix").setExecutor(new CommandPrefix(this));

		new EntityKiller().runTaskTimer(this, 0, 30);
		this.getServer().getPluginManager().registerEvents(new Events(this), this);
		WorldEdit.getInstance().getEventBus().register(new WorldEditEvent());
	}
}
